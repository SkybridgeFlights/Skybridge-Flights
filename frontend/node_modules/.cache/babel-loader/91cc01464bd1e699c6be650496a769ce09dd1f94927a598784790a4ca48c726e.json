{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wajd Shaaban\\\\OneDrive\\\\Desktop\\\\SkybridgeFlights\\\\frontend\\\\src\\\\pages\\\\ResetPasswordPage.js\",\n  _s = $RefreshSig$();\n// src/pages/ResetPasswordPage.js\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../apiConfig';\nimport './ResetPasswordPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordPage = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      const {\n        data\n      } = await axios.post(`${API_BASE_URL}/api/users/reset-password/${token}`, {\n        newPassword: password\n      } // ✅ تغيير الاسم هنا\n      );\n      setMessage(data.message || 'Password reset successfully.');\n      setTimeout(() => navigate('/login'), 2000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to reset password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          className: \"reset-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"reset-button\",\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reset-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPasswordPage, \"Th1yNsw4qnbLu9JZtsZKqLBGQRc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","axios","API_BASE_URL","jsxDEV","_jsxDEV","ResetPasswordPage","_s","token","navigate","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","data","post","newPassword","setTimeout","err","_err$response","_err$response$data","response","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Wajd Shaaban/OneDrive/Desktop/SkybridgeFlights/frontend/src/pages/ResetPasswordPage.js"],"sourcesContent":["// src/pages/ResetPasswordPage.js\r\nimport React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { API_BASE_URL } from '../apiConfig';\r\nimport './ResetPasswordPage.css';\r\n\r\nconst ResetPasswordPage = () => {\r\n  const { token } = useParams();\r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `${API_BASE_URL}/api/users/reset-password/${token}`,\r\n        { newPassword: password } // ✅ تغيير الاسم هنا\r\n      );\r\n      setMessage(data.message || 'Password reset successfully.');\r\n      setTimeout(() => navigate('/login'), 2000);\r\n    } catch (err) {\r\n      setMessage(err.response?.data?.error || 'Failed to reset password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-container\">\r\n      <div className=\"reset-box\">\r\n        <h2>Reset Password</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"New password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            className=\"reset-input\"\r\n          />\r\n          <button type=\"submit\" className=\"reset-button\">\r\n            Update Password\r\n          </button>\r\n        </form>\r\n        {message && <p className=\"reset-message\">{message}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}